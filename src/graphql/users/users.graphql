scalar GraphQLISODateTime

##
# QUERIES
##
type Query {
  user(id: ID!): User
  users: [UserOnly]!
}

##
# TYPES
##
type User {
  id: ID!
  first_name: String!
  last_name: String
  email: String
  date_of_birth: GraphQLISODateTime
  created_at: GraphQLISODateTime!
  modified_at: GraphQLISODateTime!
  tagsConnection(take: Int, after: String): UserTagsConnection!
  identities: [Identity!]!
}

type UserOnly {
  id: ID!
  first_name: String!
  last_name: String
  email: String
  date_of_birth: GraphQLISODateTime
  created_at: GraphQLISODateTime!
  modified_at: GraphQLISODateTime!
}

type UserTagsConnection {
  edges: [UserTagsEdge]!
}

type UserTagsEdge {
  cursor: String!
  node: TagOnly!
}

type Identity {
  id: ID!
  user_id: String!
  provider_id: String!
  auth_provider: AUTH_PROVIDER!
  created_at: GraphQLISODateTime!
  user: User!
}
